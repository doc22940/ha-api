FORMAT: 1A
HOST: http://api.hyperaud.io

# Hyperaudio v1


## User details [/v1/whoami]

### [GET]
Check for existing user session

Note: both responses are actually 200. (404 TBD)

+ Response 404 (application/json)

        {
            "user": null
        }

+ Response 200 (application/json)

        {
            "user": "masterblaster"
        }

## Sign in [/v1/login]
### [POST]
Successful response identical with `/v1/whoami`

+ Request (application/json)

        {
            password: "thunderdome",
            username: "masterblaster"
        }

+ Response 200

        {
            "user": "masterblaster"
        }

+ Response 401

            EMPTY


## Sign out [/v1/logout]
### [POST]
Successful response identical with `/v1/whoami` (null user)

+ Response 200

        {
            "user": null
        }


## Register [/v1/register]
In this version check `/whoami` afterwards to see if registered (and logged in) as it fails silently if the account already exists.
### [POST]

+ Request (application/json)

        {
            username: "masterblaster",
            password: "thunderdome",
            email: "master@blaster.foo"
        }

+ Response 200

        {
            "user": null
        }

+ Response 401

        EMPTY

## Error reporting [/v1/error/{component}]
Used in reporting client-sider errors from the dashboard, to be extended to the other tools.

### [POST]
+ Parameters
    + component ... component name

+ Request

        {
            errorReport: {}
        }

+ Response 200

        {}

## Status check [/v1/status]
Used by monitoring tools, returns the `lag` reported by https://npmjs.org/package/toobusy
### [GET]

+ Response 200

        {
            lag: 3
        }


## Transcripts Collecton [/v1/{user}/transcripts?type={type}]
+ Parameters
    + user (optional) ... username
    + type (optional) ... filter by type (html, text, srt)

### List all Transcripts [GET]
Shows all transcripts, ignoring the bulky `meta` and `content` fields.

+ Response 200 (application/json)

        [
            {
                "_id": "QvtfKjw5QCaupKhSPg83-Q",
                "label": "Anonymous - Message to the UK government",
                "media": "LLQkcoO-TDuoe92oiO3rJw",
                "owner": "gridinoc",
                "type": "html",
                "modified": "2014-01-21T10:59:31.840Z",
                "created": "2014-01-21T10:56:59.200Z"
            },
            {
                "_id": "l_uz5I8HQTST-3FJnX62JA",
                "label": "Subtitles for Washing Wearable Electronics",
                "desc": "",
                "type": "srt",
                "owner": "gridinoc",
                "media": "MBYhBcpIRHyMJTFnonyddQ",
                "modified": "2014-01-24T09:29:28.902Z",
                "created": "2014-01-24T09:29:28.897Z"
            }
        ]

### Create Transcript [POST]
The `_id` is used as a MongoDB ObjectId, it is generated from an UUID v4 encoded with URL-safe Base64. It should not be supplied for creation.

+ Request (application/json)

        {
            "label": "new transcript",
            "media": "LLQkcoO-TDuoe92oiO3rJw",
            "owner": "gridinoc",
            "type": "text"
        }

+ Response 200 (application/json)

        {
            "_id": "AAAfKjw5QCCCpKhSPg83-Q",
           "label": "new transcript",
            "media": "LLQkcoO-TDuoe92oiO3rJw",
            "owner": "gridinoc",
            "type": "text",
            "modified": "2014-01-21T10:59:31.840Z",
            "created": "2014-01-21T10:56:59.200Z"
        }

## Transcript [/v1/{user}/transcript/{id}]
A single Transcript object with all the details.

+ Parameters
    + id (required) ... transcript id
    + user (optional) ... when provided it filters the collection

### Retrieve Transcript [GET]
The `media` field is expanded with the content of the corresponding Media object.

+ Response 200 (application/json)

        {
          "_id": "QvtfKjw5QCaupKhSPg83-Q",
          "content": "<article>...</article>",
          "label": "Anonymous - Message to the UK government",
          "media": {
            "_id": "LLQkcoO-TDuoe92oiO3rJw",
            "desc": "Greetings citizens of the world...Expect us.",
            "label": "Anonymous - Message to the UK government",
            "meta": "YsRrIqeySaiUtSotSJ0exA",
            "owner": "gridinoc",
            "source": {
              "youtube": {
                "type": "video/youtube",
                "url": "http://www.youtube.com/watch?v=4TmliW_F2Kw",
                "thumbnail": "http://i1.ytimg.com/vi/4TmliW_F2Kw/default.jpg"
              }
            },
            "type": "video",
            "tags": [
              "bar",
              "baz"
            ],
            "modified": "2014-01-22T14:26:56.948Z",
            "created": "2014-01-21T00:23:35.968Z"
          },
          "meta": {},
          "owner": "gridinoc",
          "type": "html",
          "modified": "2014-01-21T10:59:31.840Z",
          "created": "2014-01-21T10:56:59.200Z"
        }

+ Response 404

        {
            "error": "Not Found"
        }

### Update Transcript [PUT]
The `media` field always contains the ObjectId of a media object.

+ Request (application/json)

        {
            "_id": "AAAfKjw5QCCCpKhSPg83-Q",
           "label": "modified transcript",
            "media": "LLQkcoO-TDuoe92oiO3rJw",
            "owner": "gridinoc",
            "type": "text",
            "content": "...",
            "modified": "2014-01-21T10:59:31.840Z",
            "created": "2014-01-21T10:56:59.200Z"
        }

+ Response 200 (application/json)

        {
            "_id": "AAAfKjw5QCCCpKhSPg83-Q",
           "label": "modified transcript",
            "media": "LLQkcoO-TDuoe92oiO3rJw",
            "owner": "gridinoc",
            "type": "text",
            "content": "...",
            "modified": "2014-01-21T10:59:31.840Z",
            "created": "2014-01-21T10:56:59.200Z"
        }

### Delete Transcript [DELETE]

+ Response 204

## Transcript Content [/v1/{user}/transcript/{id}/{format}]
A single Transcript content

+ Parameters
    + id (required) ... transcript id
    + user (optional) ... when provided it filters the collection
    + format (required) ... `text` or `html`

### [GET]

+ Response 200 (text/plain)

        Greetings citizens of the world, we are anonymous.\n\nGovernment of the United Kingdom, It has come to our attention...


## Transcript Alignment [/v1/{user}/transcript/{id}/align]
Submit `text` transcript to alignment, it will change its type to `html` once the alignment is successful.

### [POST]

+ Response 200 (application/json)

        {
            "_id": "AAAfKjw5QCCCpKhSPg83-Q",
           "label": "modified transcript",
            "media": "LLQkcoO-TDuoe92oiO3rJw",
            "owner": "gridinoc",
            "type": "text",
            "content": "...",
            "modified": "2014-01-21T10:59:31.840Z",
            "created": "2014-01-21T10:56:59.200Z"
        }


## Mixes Collection [/v1/{user}/mixes]
+ Parameters
    + user (optional) ... user filter

### List all mixes [GET]

+ Response 200 (application/json)

        [
            {
                "_id": "sPT0dvAwSK6hp5aS7acyAg",
                "content": "<article>...</article>",
                "desc": "Description not set",
                "label": "No More Lies",
                "owner": "maboamaboa",
                "type": "beta",
                "tags": [],
                "modified": "2014-01-27T14:09:51.824Z",
                "created": "2014-01-23T20:49:39.463Z"
            },
            {}
        ]

### Create Mix [POST]

+ Request

        {
            "content": "<article>...</article>",
            "desc": "Description not set",
            "label": "No More Lies",
            "owner": "maboamaboa",
            "type": "beta",
            "tags": []
        }

+ Response 200

        {
            "_id": "sPT0dvAwSK6hp5aS7acyAg",
            "content": "<article>...</article>",
            "desc": "Description not set",
            "label": "No More Lies",
            "owner": "maboamaboa",
            "type": "beta",
            "tags": [],
            "modified": "2014-01-27T14:09:51.824Z",
            "created": "2014-01-23T20:49:39.463Z"
        }

## Mix [/v1/{user}/mixes/{id}]

### [GET]

+ Response 200

        {
            "_id": "sPT0dvAwSK6hp5aS7acyAg",
            "content": "<article>...</article>",
            "desc": "Description not set",
            "label": "No More Lies",
            "owner": "maboamaboa",
            "type": "beta",
            "tags": [],
            "modified": "2014-01-27T14:09:51.824Z",
            "created": "2014-01-23T20:49:39.463Z"
        }

### [PUT]
Update a mix

+ Request

        {
            "_id": "sPT0dvAwSK6hp5aS7acyAg",
            "content": "<article>...</article>",
            "desc": "NEW Description",
            "label": "No More Lies",
            "owner": "maboamaboa",
            "type": "beta",
            "tags": [],
            "modified": "2014-01-27T14:09:51.824Z",
            "created": "2014-01-23T20:49:39.463Z"
        }

+ Response 200

        {
            "_id": "sPT0dvAwSK6hp5aS7acyAg",
            "content": "<article>...</article>",
            "desc": "New Description",
            "label": "No More Lies",
            "owner": "maboamaboa",
            "type": "beta",
            "tags": [],
            "modified": "2014-01-27T14:09:51.824Z",
            "created": "2014-01-23T20:49:39.463Z"
        }

### [DELETE]

+ Response 204

## Mixes tags [/v1/{user}/mixes/tags]
### [GET]

+ Response 200

        [
            "Funny",
            "Test"
        ]

## Mixes tagged with a specific tag [/v1/{user}/mixes/tags/{tag}]
Use `tag = notag` to retrieve mixes with no tags set.

### [GET]

+ Response 200

        [
            {
                "_id": "Vz6rumWaTrOLWWJ1rcpabg",
                "channel": "Funny",
                "content": "<article>...</article>",
                "desc": "Description not set",
                "label": "FP- TEST1- Mitt Romeny Cutting Crack in Denver",
                "owner": "fpruitt",
                "type": "beta",
                "tags": [
                  "Funny"
                ],
                "modified": "2014-01-23T18:18:06.551Z",
                "created": "2014-01-23T16:59:51.038Z"
            },
            {}
        ]

## Mixes channels [/v1/{user}/mixes/channels]
### [GET]

+ Response 200

        [
            "Funny",
            "Test"
        ]

## Mixes from a channel [/v1/{user}/mixes/channels/{channel}]
Use `channel = nochannel` to retrieve mixes with no channel set (missing field, or channel `null`).

### [GET]

+ Response 200

        [
            {
                "_id": "Vz6rumWaTrOLWWJ1rcpabg",
                "channel": "Funny",
                "content": "<article>...</article>",
                "desc": "Description not set",
                "label": "FP- TEST1- Mitt Romeny Cutting Crack in Denver",
                "owner": "fpruitt",
                "type": "beta",
                "tags": [
                  "Funny"
                ],
                "modified": "2014-01-23T18:18:06.551Z",
                "created": "2014-01-23T16:59:51.038Z"
            },
            {}
        ]

## Media Collection [/v1/{user}/media]

### [GET]
Get list of media objects.

+ Response 200

        [
            {
                "_id": "dHAyAHpaSlSaYXKTKul6pA",
                "channel": "US Politics",
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "meta": "eYUdvDfBQMW6G7k7Kq82bw",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": [
                  "politics"
                ],
                "modified": "2014-01-23T10:28:03.773Z",
                "created": "2014-01-22T16:37:10.821Z"
          },
          {}
        ]


### [POST]
Creates media object (`_id` and `meta` will be assigned upon creation)

+ Request

        {
                "channel": null,
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": []
         }

+ Response 200

        {
                "_id": "dHAyAHpaSlSaYXKTKul6pA",
                "channel": null,
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "meta": "eYUdvDfBQMW6G7k7Kq82bw",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": [],
                "modified": "2014-01-23T10:28:03.773Z",
                "created": "2014-01-22T16:37:10.821Z"
        }

## Media Object [/v1/{user}/media/{id}]

### [GET]
+ Response 200

        {
                "_id": "dHAyAHpaSlSaYXKTKul6pA",
                "channel": null,
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "meta": "eYUdvDfBQMW6G7k7Kq82bw",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": [],
                "modified": "2014-01-23T10:28:03.773Z",
                "created": "2014-01-22T16:37:10.821Z"
        }

### [PUT]
Update media object

+ Request

        {
                "_id": "dHAyAHpaSlSaYXKTKul6pA",
                "channel": "US Politics",
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "meta": "eYUdvDfBQMW6G7k7Kq82bw",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": [],
                "modified": "2014-01-23T10:28:03.773Z",
                "created": "2014-01-22T16:37:10.821Z"
        }

+ Response 200

        {
                "_id": "dHAyAHpaSlSaYXKTKul6pA",
                "channel": "US Politics",
                "desc": "",
                "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
                "meta": "eYUdvDfBQMW6G7k7Kq82bw",
                "owner": "maboamaboa",
                "source": {
                  "youtube": {
                    "type": "video/youtube",
                    "url": "http://www.youtube.com/watch?v=-ImRaxGNAkM",
                    "thumbnail": "http://i1.ytimg.com/vi/-ImRaxGNAkM/default.jpg"
                  }
                },
                "type": "video",
                "tags": [],
                "modified": "2014-01-23T10:28:03.773Z",
                "created": "2014-01-22T16:37:10.821Z"
        }


### [DELETE]
+ Response 204


## Media Transcripts [/v1/{user}/media/{id}/transcripts]
Retrieve transcripts associated with this media object.

### [GET]
+ Response 200

        [
          {
            "_id": "z7E28pWmTfqY4dZIgzryog",
            "content": "<article>...</article>",
            "desc": "",
            "label": "1st US Presidential Debate - 2012 - Obama Romney (Denver)",
            "media": "dHAyAHpaSlSaYXKTKul6pA",
            "owner": "maboamaboa",
            "type": "html",
            "modified": "2014-01-24T16:15:40.497Z",
            "created": "2014-01-23T10:17:52.933Z"
          }
        ]

## Media Metadata [/v1/{user}/media/{id}/meta/{data}]
Where `data` is usually `video`, `audio` and will retrieve cached files metadata of such format (codec).

+ Response 200

        {
          "_id": "KrQPHNKBQxSuXRlLvdIJPA",
          "label": "Anonymous - Message to the UK government",
          "desc": "Greetings citizens of the world, we are anonymous....Expect us.",
          "type": "video",
          "owner": "gridinoc",
          "meta": {
            "_id": "qyt1AzF0TzGtFMKsjP9XTA",
            "video": [
              {
                "type": "application/octet-stream",
                "file": "00003.mp4",
                "meta": {
                  "filename": "00003.mp4",
                  "filepath": "/vagrant/media/KrQPHNKBQxSuXRlLvdIJPA",
                  "fileext": ".mp4",
                  "file": "/vagrant/media/KrQPHNKBQxSuXRlLvdIJPA/00003.mp4",
                  "probe_time": 25,
                  "streams": [
                    {
                      "codec_name": "h264",
                      "codec_long_name": "H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10",
                      "codec_type": "video",
                      "codec_time_base": "1/30",
                      "codec_tag_string": "avc1",
                      "codec_tag": "0x31637661",
                      "width": 256,
                      "height": 144,
                      "has_b_frames": 0,
                      "pix_fmt": "yuv420p",
                      "level": 12,
                      "r_frame_rate": "15/1",
                      "avg_frame_rate": "0/1",
                      "time_base": "1/90000",
                      "start_time": 171.705,
                      "duration": 343.41,
                      "TAG:creation_time": "2013-12-04 03:45:38",
                      "TAG:language": "und"
                    }
                  ],
                  "format": {
                    "nb_streams": 1,
                    "format_name": "mov,mp4,m4a,3gp,3g2,mj2",
                    "format_long_name": "QuickTime/MPEG-4/Motion JPEG 2000 format",
                    "start_time": 171.705,
                    "duration": 343.41,
                    "size": 2426472,
                    "bit_rate": 56526
                  },
                  "metadata": {
                    "major_brand": "dash",
                    "minor_version": 0,
                    "compatible_brands": "iso6avc1mp41",
                    "creation_time": "2013-12-04 03:45:38"
                  }
                }
              }
            ]
          },
          "source": {
            "youtube": {
              "type": "video/youtube",
              "url": "http://www.youtube.com/watch?v=4TmliW_F2Kw",
              "thumbnail": "http://i1.ytimg.com/vi/4TmliW_F2Kw/default.jpg"
            }
          },
          "tags": [
            "baz"
          ],
          "modified": "2014-01-04T16:50:11.101Z",
          "created": "2014-01-04T16:50:11.096Z"
        }



## Media tags [/v1/{user}/media/tags]
### [GET]

+ Response 200

        [
          "baz",
          "AJ+",
          "mandela",
          "soviet",
          "politics",
          "Hyperaudio",
          "nsa",
          "snowden",
          "mozilla",
          "netscape",
          "aj+",
          "Fox",
          "Prime Minister's Question Time",
          "state of the union",
          "ideas",
          "open source"
        ]

## Media tagged with a specific tag [/v1/{user}/media/tags/{tag}]
Use `tag = notag` to retrieve mixes with no tags set.

### [GET]

+ Response 200

        [
          {
            "_id": "BZIzo_Z3T6eOSWm-zFbJ2Q",
            "channel": "MEGA",
            "desc": "",
            "label": "(41) Megastructures - Soviet Doomsday Submarine",
            "meta": "WnJzxUdcT-OdL0RGOoNm_Q",
            "owner": "gridinoc",
            "source": {
              "youtube": {
                "type": "video/youtube",
                "url": "http://www.youtube.com/watch?v=CifAGql4NeY",
                "thumbnail": "http://i1.ytimg.com/vi/CifAGql4NeY/default.jpg"
              }
            },
            "type": "video",
            "tags": [
              "soviet"
            ],
            "modified": "2014-01-23T05:20:51.712Z",
            "created": "2014-01-22T16:20:13.431Z"
          }
        ]


## Media channels [/v1/{user}/media/channels]
### [GET]

+ Response 200

        [
          "US Politics",
          "MEGA",
          "tutorials",
          null,
          "World Politics",
          "hacker culture",
          "World News",
          "Music",
          "UK Parliament",
          "TED",
          "robots",
          "inspiration",
          "zombies"
        ]

## Media with a specific channel [/v1/{user}/media/channels/{channel}]
Use `channel = nochannel` to retrieve mixes with no tags set.

### [GET]

+ Response 200

        [
          {
            "_id": "aBDjQwYkQ86MpWdSheu-5A",
            "channel": "zombies",
            "desc": "Decay is a 75 minute zombie film, shot and set at the Large Hadron Collider, CERN, by physics PhD students. Download: http://www.DecayFilm.com (CC-BY-NC)\n\nSoundtrack now available free! https://soundcloud.com/onehundredmiles/sets/decay-2012-ost\n\nTrapped underground at the world's largest particle accelerator, a group of students make a deadly discovery.\n\nTwitter: http://www.twitter.com/DecayFilm @Decay Film\nFacebook: http://www.facebook.com/DecayFilm\n\nEnglish subtitles: http://www.decayfilm.com/static/files/EnglishCCSubs.acc or http://www.decayfilm.com/static/files/EnglishCCSubs.sub\n\nBloopers reel: http://youtu.be/Y5xAQtsFOGs",
            "label": "Decay (2012) - The LHC Zombie Movie [full film]",
            "meta": "ZbZpeLBqRgCV6BjxckcUUg",
            "owner": "maboamaboa",
            "source": {
              "youtube": {
                "type": "video/youtube",
                "url": "http://www.youtube.com/watch?v=n-NwLUPZWZc",
                "thumbnail": "http://i1.ytimg.com/vi/n-NwLUPZWZc/default.jpg"
              }
            },
            "type": "video",
            "tags": [],
            "modified": "2014-01-30T12:46:11.316Z",
            "created": "2014-01-30T12:45:52.670Z"
          }
        ]


